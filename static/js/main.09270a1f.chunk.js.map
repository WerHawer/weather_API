{"version":3,"sources":["components/WeatherInfo.module.css","utils/weatherAPI.js","components/CityBtn.js","data/cities.js","components/Navigation.js","components/WeatherInfo.js","App.js","index.js","components/CityBtn.module.css","components/Navigation.module.css"],"names":["module","exports","BASE_URL","key","temperatureFormatC","getWeather","city","finalUrl","axios","get","weatherResponse","data","list","CityBtn","name","onClick","isLoading","choosenCity","type","disabled","className","css","active","button","ldsDualRing","id","shortid","generate","Navigation","buttonsBlock","buttonsCover","buttonsNotCover","cities","map","WeatherInfo","cityName","element","elementName","main","temp","pressure","humidity","wind","speed","deg","App","state","handleClickOnCityBtn","e","a","setState","target","weatherAPI","weatherData","this","console","log","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09270a1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"WeatherInfo_list__26Ck2\",\"element\":\"WeatherInfo_element__tl5uw\",\"elementName\":\"WeatherInfo_elementName__3cIwq\",\"cityName\":\"WeatherInfo_cityName__1XjvP WeatherInfo_element__tl5uw\"};","import axios from \"axios\";\r\n\r\nexport default {\r\n  BASE_URL: \"http://api.openweathermap.org/data/2.5/find?q=\",\r\n\r\n  key: \"c2dcf8ffb5cdc3f8977bfd2ae7ea4738\",\r\n\r\n  temperatureFormatC: \"&units=metric\",\r\n\r\n  async getWeather(city) {\r\n    const finalUrl = `${this.BASE_URL}${city}${this.temperatureFormatC}&appid=${this.key}`;\r\n    const weatherResponse = await axios.get(finalUrl);\r\n\r\n    return weatherResponse.data.list[0];\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport css from \"./CityBtn.module.css\";\r\n\r\nconst CityBtn = ({ name, onClick, isLoading, choosenCity }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={onClick}\r\n    name={name}\r\n    disabled={isLoading}\r\n    className={choosenCity === name ? css.active : css.button}\r\n  >\r\n    {isLoading ? <div className={css.ldsDualRing}></div> : name}\r\n  </button>\r\n);\r\nexport default CityBtn;\r\n","import shortid from \"shortid\";\r\nexport default [\r\n  {\r\n    id: shortid.generate(),\r\n    name: \"Kyiv\"\r\n  },\r\n  {\r\n    id: shortid.generate(),\r\n    name: \"London\"\r\n  },\r\n  {\r\n    id: shortid.generate(),\r\n    name: \"New York\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport CityBtn from \"./CityBtn\";\r\nimport cities from \"../data/cities\";\r\nimport css from \"./Navigation.module.css\";\r\n\r\nconst Navigation = ({ onClick, isLoading, choosenCity }) => (\r\n  <div className={css.buttonsBlock}>\r\n    <div className={isLoading ? css.buttonsCover : css.buttonsNotCover}></div>\r\n    {cities.map(city => (\r\n      <CityBtn\r\n        name={city.name}\r\n        onClick={onClick}\r\n        key={city.id}\r\n        isLoading={isLoading}\r\n        choosenCity={choosenCity}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport css from \"./WeatherInfo.module.css\";\r\n\r\nconst WeatherInfo = ({ data }) => (\r\n  <>\r\n    {data && (\r\n      <ul className={css.list}>\r\n        <li className={css.cityName}>{data.name}</li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Temperature</span>\r\n          <span>{data.main.temp} °С</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}> Atmospheric pressure</span>\r\n          <span>{data.main.pressure} hPa</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Humidity</span>\r\n          <span>{data.main.humidity} %</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Wind speed </span>\r\n          <span>{data.wind.speed} meter/sec</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Wind direction</span>\r\n          <span>{data.wind.deg ? data.wind.deg : \"90\"} °</span>\r\n        </li>\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default WeatherInfo;\r\n","import React, { Component } from \"react\";\nimport weatherAPI from \"./utils/weatherAPI\";\nimport Navigation from \"./components/Navigation\";\nimport WeatherInfo from \"./components/WeatherInfo\";\n\nexport default class App extends Component {\n  state = { choosenCity: \"Kyiv\", isLoading: false, data: \"\" };\n\n  async componentDidMount() {\n    const { choosenCity } = this.state;\n    const weatherData = await weatherAPI.getWeather(choosenCity);\n\n    this.setState({ data: weatherData });\n  }\n\n  handleClickOnCityBtn = async e => {\n    this.setState({ isLoading: true, choosenCity: e.target.name, data: null });\n    const weatherData = await weatherAPI.getWeather(e.target.name);\n\n    this.setState({ isLoading: false, data: weatherData });\n  };\n  render() {\n    const { isLoading, choosenCity, data } = this.state;\n    console.log(data);\n    return (\n      <div className=\"wrapper\">\n        <Navigation\n          isLoading={isLoading}\n          choosenCity={choosenCity}\n          onClick={this.handleClickOnCityBtn}\n        />\n        <WeatherInfo data={data} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./preloader.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CityBtn_button__POy48\",\"active\":\"CityBtn_active__2CGZd CityBtn_button__POy48\",\"ldsDualRing\":\"CityBtn_ldsDualRing__3Ihf3\",\"lds-dual-ring\":\"CityBtn_lds-dual-ring__32xiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"Navigation_buttonsBlock__iugGG\",\"buttonsCover\":\"Navigation_buttonsCover__1CW2Q\",\"buttonsNotCover\":\"Navigation_buttonsNotCover__2n5-0 Navigation_buttonsCover__1CW2Q\"};"],"sourceRoot":""}