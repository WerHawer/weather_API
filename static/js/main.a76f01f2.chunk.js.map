{"version":3,"sources":["components/FiveDaysWeather.module.css","components/CityBtn.module.css","components/Navigation.module.css","transitions/opacity.module.css","transitions/slide.module.css","components/WeatherInfo.module.css","components/WeatherByPosition.module.css","utils/weatherAPI.js","components/CityBtn.js","data/cities.js","components/Navigation.js","components/WeatherInfo.js","data/monthes.js","utils/getTime.js","components/FiveDaysWeather.js","utils/nav.js","components/WeatherByPosition.js","App.js","index.js"],"names":["module","exports","BASE_URL","key","temperatureFormatC","getWeather","city","finalUrl","axios","get","weatherResponse","data","list","alert","getFiveDaysWeather","getWeatherByPosition","coords","lat","lon","CityBtn","name","onClick","isLoading","choosenCity","type","disabled","className","css","active","button","ldsDualRing","id","shortid","generate","Navigation","buttonsBlock","buttonsCover","buttonsNotCover","cities","map","WeatherInfo","cityName","element","elementName","Math","floor","main","temp","pressure","humidity","wind","speed","deg","getTime","date","pad","value","padStart","H","String","Date","getHours","M","grupeByDate","arrData","reduce","acc","el","forecastObj","D","dt_txt","getDate","getMonth","Y","getFullYear","minT","temp_min","maxT","temp_max","icon","weather","oneDayFilter","arr","filterByOneDate","replace","FiveDaysWeather","state","detailedDayInfo","choosen","oneDayFiltered","handleClickDetails","e","oneDayForecastObj","target","props","fiveDaysWeather","filter","DM","MM","setState","handleClickHide","setTimeout","fiveDaysWeatherForecastBuilder","firstFilter","this","prevProps","prevState","CSSTransition","in","timeout","classNames","opacityTransition","unmountOnExit","container","forecast","oneDayContainer","mS","imgContainer","src","alt","details","oneDetailed","temperature","buttonHide","Component","getPosition","Promise","resolve","reject","userPosition","navigator","geolocation","getCurrentPosition","position","latitude","longitude","WeatherByPosition","slideTransition","byPosition","description","App","dataByPosition","handleClickOnCityBtn","a","weatherAPI","weatherData","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a76f01f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FiveDaysWeather_container__XiEP5\",\"details\":\"FiveDaysWeather_details__3oco0\",\"oneDayContainer\":\"FiveDaysWeather_oneDayContainer__29wFk\",\"imgContainer\":\"FiveDaysWeather_imgContainer__1uk9n\",\"button\":\"FiveDaysWeather_button__Dnd4T\",\"active\":\"FiveDaysWeather_active__2yhzO FiveDaysWeather_button__Dnd4T\",\"date\":\"FiveDaysWeather_date__3AW_m\",\"oneDetailed\":\"FiveDaysWeather_oneDetailed__hQ-nY\",\"temperature\":\"FiveDaysWeather_temperature__v8J7m\",\"buttonHide\":\"FiveDaysWeather_buttonHide__7iBwD FiveDaysWeather_button__Dnd4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CityBtn_button__POy48\",\"active\":\"CityBtn_active__2CGZd CityBtn_button__POy48\",\"ldsDualRing\":\"CityBtn_ldsDualRing__3Ihf3\",\"lds-dual-ring\":\"CityBtn_lds-dual-ring__32xiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"Navigation_buttonsBlock__iugGG\",\"buttonsCover\":\"Navigation_buttonsCover__1CW2Q\",\"buttonsNotCover\":\"Navigation_buttonsNotCover__2n5-0 Navigation_buttonsCover__1CW2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"opacity_enter__gDkmR\",\"enterActive\":\"opacity_enterActive__1PzRQ\",\"exit\":\"opacity_exit__b7r3_\",\"exitActive\":\"opacity_exitActive__13AyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3QQ8t\",\"enterActive\":\"slide_enterActive__34kvd\",\"exit\":\"slide_exit__1JWfj\",\"exitActive\":\"slide_exitActive__2RQDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"WeatherInfo_list__26Ck2\",\"element\":\"WeatherInfo_element__tl5uw\",\"elementName\":\"WeatherInfo_elementName__3cIwq\",\"cityName\":\"WeatherInfo_cityName__1XjvP WeatherInfo_element__tl5uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherByPosition_container__FHf0n\",\"city\":\"WeatherByPosition_city__1TkWw\",\"byPosition\":\"WeatherByPosition_byPosition__T6UIw\",\"weather\":\"WeatherByPosition_weather__UbHmf\",\"temperature\":\"WeatherByPosition_temperature__1od6J\"};","import axios from \"axios\";\r\n\r\nexport default {\r\n  BASE_URL: \"https://api.openweathermap.org/data/2.5/\",\r\n\r\n  key: \"c2dcf8ffb5cdc3f8977bfd2ae7ea4738\",\r\n\r\n  temperatureFormatC: \"&units=metric\",\r\n\r\n  async getWeather(city) {\r\n    try {\r\n      const finalUrl = `${this.BASE_URL}find?q=${city}${this.temperatureFormatC}&appid=${this.key}`;\r\n      const weatherResponse = await axios.get(finalUrl);\r\n\r\n      return weatherResponse.data.list[0];\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  },\r\n\r\n  async getFiveDaysWeather(city) {\r\n    try {\r\n      const finalUrl = `${this.BASE_URL}forecast?q=${city}${this.temperatureFormatC}&appid=${this.key}`;\r\n      const weatherResponse = await axios.get(finalUrl);\r\n\r\n      return weatherResponse.data;\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  },\r\n\r\n  async getWeatherByPosition(coords) {\r\n    try {\r\n      const finalUrl = `${this.BASE_URL}weather?lat=${coords.lat}&lon=${coords.lon}${this.temperatureFormatC}&appid=${this.key}`;\r\n      const weatherResponse = await axios.get(finalUrl);\r\n\r\n      return weatherResponse.data;\r\n    } catch (error) {\r\n      alert(\"leelel\");\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport css from \"./CityBtn.module.css\";\r\n\r\nconst CityBtn = ({ name, onClick, isLoading, choosenCity }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={onClick}\r\n    name={name}\r\n    disabled={isLoading}\r\n    className={choosenCity === name ? css.active : css.button}\r\n  >\r\n    {isLoading ? <div className={css.ldsDualRing}></div> : name}\r\n  </button>\r\n);\r\nexport default CityBtn;\r\n","import shortid from \"shortid\";\r\nexport default [\r\n  {\r\n    id: shortid.generate(),\r\n    name: \"Kyiv\"\r\n  },\r\n  {\r\n    id: shortid.generate(),\r\n    name: \"London\"\r\n  },\r\n  {\r\n    id: shortid.generate(),\r\n    name: \"New York\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport CityBtn from \"./CityBtn\";\r\nimport cities from \"../data/cities\";\r\nimport css from \"./Navigation.module.css\";\r\n\r\nconst Navigation = ({ onClick, isLoading, choosenCity }) => (\r\n  <div className={css.buttonsBlock}>\r\n    <div className={isLoading ? css.buttonsCover : css.buttonsNotCover}></div>\r\n    {cities.map(city => (\r\n      <CityBtn\r\n        name={city.name}\r\n        onClick={onClick}\r\n        key={city.id}\r\n        isLoading={isLoading}\r\n        choosenCity={choosenCity}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport css from \"./WeatherInfo.module.css\";\r\n\r\nconst WeatherInfo = ({ data }) => (\r\n  <>\r\n    {data && (\r\n      <ul className={css.list}>\r\n        <li className={css.cityName}>{data.name}</li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Temperature</span>\r\n          <span>{Math.floor(data.main.temp)} °С</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}> Atmospheric pressure</span>\r\n          <span>{data.main.pressure} hPa</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Humidity</span>\r\n          <span>{data.main.humidity} %</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Wind speed </span>\r\n          <span>{data.wind.speed} meter/sec</span>\r\n        </li>\r\n\r\n        <li className={css.element}>\r\n          <span className={css.elementName}>Wind direction</span>\r\n          <span>{data.wind.deg ? data.wind.deg : \"90\"} °</span>\r\n        </li>\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default WeatherInfo;\r\n","export default [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"Aug\",\r\n  \"Sept\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\"\r\n];\r\n","const getTime = date => {\r\n  const pad = value => value.padStart(2, \"0\");\r\n  const H = pad(String(new Date(date).getHours()));\r\n  const M = pad(String(new Date(date).getHours()));\r\n\r\n  return `${H}:${M}`;\r\n};\r\n\r\nexport default getTime;\r\n","import React, { Component } from \"react\";\r\nimport css from \"./FiveDaysWeather.module.css\";\r\nimport mS from \"../data/monthes\";\r\nimport getTime from \"../utils/getTime\";\r\nimport shortid from \"shortid\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport opacityTransition from \"../transitions/opacity.module.css\";\r\n\r\nconst grupeByDate = arrData => {\r\n  if (!arrData) return;\r\n\r\n  const forecast = arrData.list;\r\n\r\n  let grupeByDate = forecast.reduce((acc, el) => {\r\n    const D = new Date(el.dt_txt).getDate();\r\n    const M = new Date(el.dt_txt).getMonth();\r\n    const Y = new Date(el.dt_txt).getFullYear();\r\n    const minT = Math.floor(el.main.temp_min);\r\n    const maxT = Math.floor(el.main.temp_max);\r\n\r\n    const forecastObj = {\r\n      D,\r\n      M,\r\n      Y,\r\n      minT,\r\n      maxT,\r\n      id: shortid.generate(),\r\n      icon: el.weather[0].icon\r\n    };\r\n\r\n    return (acc = [...acc, forecastObj]);\r\n  }, []);\r\n\r\n  grupeByDate = [...grupeByDate, {}];\r\n\r\n  return grupeByDate;\r\n};\r\n\r\nconst oneDayFilter = arr => {\r\n  if (!arr) return;\r\n\r\n  let filterByOneDate = [];\r\n  arr.reduce((acc, el) => {\r\n    if (acc.D === el.D) {\r\n      const minT = acc.minT < el.minT ? acc.minT : el.minT;\r\n      const maxT = acc.maxT > el.maxT ? acc.maxT : el.maxT;\r\n      const icon = acc.icon.replace(\"n\", \"d\");\r\n\r\n      return (acc = { ...acc, minT, maxT, icon });\r\n    } else {\r\n      filterByOneDate = [...filterByOneDate, acc];\r\n      return (acc = el);\r\n    }\r\n  });\r\n\r\n  return filterByOneDate;\r\n};\r\n\r\nexport default class FiveDaysWeather extends Component {\r\n  state = { detailedDayInfo: \"\", choosen: \"\", oneDayFiltered: null };\r\n\r\n  componentDidMount() {\r\n    this.fiveDaysWeatherForecastBuilder(this.props.fiveDaysWeather);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.fiveDaysWeather !== this.props.fiveDaysWeather) {\r\n      this.fiveDaysWeatherForecastBuilder(this.props.fiveDaysWeather);\r\n    }\r\n  }\r\n\r\n  handleClickDetails = (e, oneDayForecastObj) => {\r\n    const choosen = e.target.id;\r\n    const { fiveDaysWeather } = this.props;\r\n\r\n    const detailedDayInfo = fiveDaysWeather.list.filter(el => {\r\n      const DM = new Date(el.dt_txt).getDate();\r\n      const MM = new Date(el.dt_txt).getMonth();\r\n\r\n      const { D, M } = oneDayForecastObj;\r\n\r\n      return DM === D && MM === M;\r\n    });\r\n\r\n    this.setState({ detailedDayInfo, choosen });\r\n  };\r\n\r\n  handleClickHide = () => {\r\n    this.setState({ choosen: \"\" });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ detailedDayInfo: \"\" });\r\n    }, 500);\r\n  };\r\n\r\n  fiveDaysWeatherForecastBuilder = data => {\r\n    const firstFilter = grupeByDate(data);\r\n    const oneDayFiltered = oneDayFilter(firstFilter);\r\n    this.setState({ oneDayFiltered });\r\n  };\r\n\r\n  render() {\r\n    const { detailedDayInfo, choosen, oneDayFiltered } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={!!oneDayFiltered}\r\n          timeout={500}\r\n          classNames={opacityTransition}\r\n          unmountOnExit\r\n        >\r\n          <ul className={css.container}>\r\n            {oneDayFiltered &&\r\n              oneDayFiltered.map(forecast => (\r\n                <li key={forecast.id} className={css.oneDayContainer}>\r\n                  <p className={css.date}>{` ${forecast.D} ${\r\n                    mS[forecast.M]\r\n                  }`}</p>\r\n                  <div className={css.imgContainer}>\r\n                    <img\r\n                      src={`http://openweathermap.org/img/wn/${forecast.icon}.png`}\r\n                      alt=\"weather\"\r\n                    />\r\n                  </div>\r\n\r\n                  <p>{`${forecast.minT} - ${forecast.maxT} °C`}</p>\r\n\r\n                  <button\r\n                    className={\r\n                      choosen === forecast.id ? css.active : css.button\r\n                    }\r\n                    type=\"button\"\r\n                    id={forecast.id}\r\n                    onClick={e => this.handleClickDetails(e, forecast)}\r\n                  >\r\n                    Day details\r\n                  </button>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={!!choosen}\r\n          timeout={500}\r\n          unmountOnExit\r\n          classNames={opacityTransition}\r\n        >\r\n          <div className={css.details}>\r\n            {detailedDayInfo && (\r\n              <>\r\n                <div className={css.container}>\r\n                  {detailedDayInfo.map(el => (\r\n                    <div key={el.dt_txt} className={css.oneDetailed}>\r\n                      <p className={css.date}>{getTime(el.dt_txt)}</p>\r\n                      <div className={css.weather}>\r\n                        <div className={css.imgContainer}>\r\n                          <img\r\n                            src={`http://openweathermap.org/img/wn/${el.weather[0].icon}.png`}\r\n                            alt=\"weather\"\r\n                          />\r\n                        </div>\r\n                        <p className={css.temperature}>{`${Math.floor(\r\n                          el.main.temp\r\n                        )} °C`}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.handleClickHide}\r\n                  className={css.buttonHide}\r\n                >\r\n                  Hide\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","const getPosition = new Promise((resolve, reject) => {\r\n  let userPosition = {};\r\n  navigator.geolocation.getCurrentPosition(position => {\r\n    userPosition.lat = position.coords.latitude;\r\n    userPosition.lon = position.coords.longitude;\r\n    resolve(userPosition);\r\n  });\r\n});\r\n\r\nexport default getPosition;\r\n","import React from \"react\";\r\nimport css from \"./WeatherByPosition.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../transitions/slide.module.css\";\r\n\r\nconst WeatherByPosition = ({ data }) => (\r\n  <CSSTransition\r\n    in={!!data}\r\n    timeout={500}\r\n    unmountOnExit\r\n    classNames={slideTransition}\r\n  >\r\n    <div className={css.container}>\r\n      {data && (\r\n        <>\r\n          <h2 className={css.city}>{data.name}</h2>\r\n          <p className={css.byPosition}>(weather by your position)</p>\r\n          <div className={css.weather}>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`}\r\n              alt=\"weather\"\r\n            />\r\n            <div>\r\n              <p className={css.temperature}>\r\n                {\" \"}\r\n                {Math.floor(data.main.temp)} °C\r\n              </p>\r\n              <p className={css.temperature}>{data.weather[0].description}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default WeatherByPosition;\r\n","import React, { Component } from \"react\";\nimport weatherAPI from \"./utils/weatherAPI\";\nimport Navigation from \"./components/Navigation\";\nimport WeatherInfo from \"./components/WeatherInfo\";\nimport FiveDaysWeather from \"./components/FiveDaysWeather\";\nimport getPosition from \"./utils/nav\";\nimport WeatherByPosition from \"./components/WeatherByPosition\";\n\nexport default class App extends Component {\n  state = {\n    choosenCity: \"Kyiv\",\n    isLoading: false,\n    data: \"\",\n    dataByPosition: \"\",\n    fiveDaysWeather: null,\n    coords: null\n  };\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    const { choosenCity } = this.state;\n    const weatherData = await weatherAPI.getWeather(choosenCity);\n    const fiveDaysWeather = await weatherAPI.getFiveDaysWeather(choosenCity);\n\n    getPosition.then(coords => this.setState({ coords }));\n\n    this.setState({\n      data: weatherData,\n      fiveDaysWeather,\n      isLoading: false\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { coords, dataByPosition } = this.state;\n    if (prevState.coords !== this.state.coords) {\n      const dataByPosition = await weatherAPI.getWeatherByPosition(coords);\n      this.setState({ dataByPosition });\n    }\n  }\n\n  handleClickOnCityBtn = async e => {\n    const choosenCity = e.target.name;\n    this.setState({\n      isLoading: true,\n      choosenCity,\n      data: null,\n      fiveDaysWeather: null\n    });\n    const weatherData = await weatherAPI.getWeather(choosenCity);\n    const fiveDaysWeather = await weatherAPI.getFiveDaysWeather(choosenCity);\n\n    this.setState({ isLoading: false, data: weatherData, fiveDaysWeather });\n  };\n\n  render() {\n    const {\n      isLoading,\n      choosenCity,\n      data,\n      fiveDaysWeather,\n      dataByPosition\n    } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <WeatherByPosition data={dataByPosition} />\n        <Navigation\n          isLoading={isLoading}\n          choosenCity={choosenCity}\n          onClick={this.handleClickOnCityBtn}\n        />\n        <WeatherInfo data={data} />\n        {fiveDaysWeather && (\n          <FiveDaysWeather fiveDaysWeather={fiveDaysWeather} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./preloader.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}